[[{"i":"what-is-askthecode","l":"What is AskTheCode?","p":["Welcome to the documentation for the AskTheCode ChatGPT plugin!","AskTheCode is a powerful and versatile plugin designed to bridge the gap between ChatGPT and the vast world of GitHub repositories. With AskTheCode, developers can seamlessly analyze GitHub repositories and pose questions to ChatGPT related to those repositories. Whether you're diving into a new codebase, reviewing an old project, or just curious about a repository's structure, AskTheCode has got you covered."]},{"l":"Key Features","p":["Universal Language Support: Whether you're working with Python, JavaScript, Rust, or any other programming language, AskTheCode is designed to support them all. Its versatility ensures that no code is left behind.","Public and Private Repositories: Your privacy matters. AskTheCode is equipped to work with both public and private repositories, ensuring that you can access and analyze your code irrespective of its visibility status on GitHub.","Accurate Results: The efficacy of AskTheCode is largely influenced by the way you prompt ChatGPT. Craft your questions thoughtfully to get the most accurate and relevant results.","Remember, like any tool, the power of AskTheCode is harnessed best when used correctly. Dive in, explore, and let AskTheCode assist you in your coding journey!"]}],[{"l":"Authentication in AskTheCode Plugin","p":["To ensure a seamless experience with the AskTheCode plugin, users are required to authenticate."]},{"l":"Authentication Methods","p":["Passwordless Login via Email","This method allows users to quickly start exploring the features of the AskTheCode plugin without the need for a password. It's a hassle-free way to get started, especially for those who are new to the plugin and want to explore its capabilities. However, this method is recommended for exploration purposes only.","GitHub OAuth Authentication","Authenticating with your GitHub account unlocks additional features, such as the ability to ask questions about private repositories. For an enhanced experience and to take full advantage of the plugin's capabilities, we recommend using the GitHub OAuth method."]},{"l":"Managing Your Account and Subscription","p":["To manage your account, subscription plan, and view your quota:","Visit the Account Management Page.","Here, you can view your current quota and available subscription plans.","To manage your current subscription, click on the Manage subscription icon located at the top-right corner of the page."]},{"l":"Changing the Authentication Method","p":["To change the authentication method, you indeed need to reinstall the plugin. When you install it, it will ask you to log in and will show you the authentication page:","On this page, you can press the \"Change account\" link, and you'll be redirected to the main Login page. It's important to note that GitHub caches the account you have previously used, so you might need to clear cookies for the github.com domain to see the prompt again."]},{"l":"Troubleshooting"},{"i":"couldnt-log-in-with-plugin","l":"Couldn't Log in with Plugin","p":["If you encounter an issue where you're unable to log in using the plugin, it might be related to a known OpenAI issue experienced by some users who use a non-English language in their browser.","To resolve this issue:","Change the browser language to English.","If the browser translation feature is turned on and set to a language other than English, change it to English as well."]},{"l":"Unable to Retrieve Data from Private Repository","p":["If you encounter an error when trying to retrieve data from your private repository, the issue might be related to the following error message:","Although you appear to have the correct authorization credentials, the YOUR ORGANIZATION NAME HERE organization has enabled OAuth App access restrictions, meaning that data access to third-parties is limited. For more information on these restrictions, including how to enable this app, visit here.","To resolve this issue, ensure that you have approved the AskTheCode OAuth app within your organization. To see how to approve the app, consult the Approving OAuth apps for your organization documentation."]}],[{"l":"Prerequisites","p":["Before diving into the installation of the AskTheCode ChatGPT plugin, ensure you've met the following prerequisites:","1. ChatGPT Plus Subscription Ensure you have a ChatGPT Plus subscription. If not, you can get it here.","2. Enroll for ChatGPT Plugins Sign up for ChatGPT plugins here.","3. Wait for Plugin Activation After enrolling, patiently wait until plugins are enabled for your account.","4. Enable Plugins in User Settings Make sure that the plugins are activated in your user settings. To access settings:","Navigate to the left bottom edge of the screen.","Expand the three dots menu located near your profile name.","From the dropdown, select and open the settings.","Ensure the plugins are enabled.","Once you've completed these steps, you're ready to install the AskTheCode plugin."]}],[{"l":"Installation","p":["Now that you've met the prerequisites, follow these steps to install the AskTheCode ChatGPT plugin:","1. Visit the Plugin Store Navigate to the Plugin Store.","2. Search for AskTheCode In the Plugin Store, search for the \"AskTheCode\" plugin.","3. Install the Plugin Click on the \"Install\" button to add the AskTheCode plugin to your ChatGPT.","4. Login to AskTheCode","After installing the plugin, the next step is to authenticate. Currently two options are available:","Passwordless Login via Email: Opt for this if you wish to quickly explore the AskTheCode plugin without setting a password. Ideal for newcomers wanting a quick dive into the plugin's features. Note: Best used for exploration only.","GitHub OAuth Authentication: For a comprehensive experience, authenticate using your GitHub account. This grants access to additional features, like querying private repositories.","For an in-depth understanding of authentication methods and account management, check out the Authentication documentation."]}],[{"l":"Github Repository Structure Retrieval"},{"l":"Overview","p":["The Github Repository Structure Retrieval feature is an integral part of the AskTheCode plugin, designed to empower users with the ability to seamlessly explore the structure of any given GitHub repository. By simply providing the link to a desired repository, users can gain a comprehensive understanding of its structure, including directories and files, without the need to navigate manually through GitHub's interface."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Effortless Repository Exploration: With this feature, a single link is all you need to get a detailed overview of any repository's structure.","Branch and Commit Flexibility: Whether you're looking to explore the default branch, delve into a custom branch, or even analyze the repository at a specific commit, this feature has got you covered. This flexibility ensures that users can get insights into the repository's state at any point in its history. More details con be found in Custom Branches documentation","Tailored Directory Content Retrieval: Interested in a specific directory or multiple directories within the repository? No problem! Specify your areas of interest, and the plugin will retrieve the contents just for you."]},{"l":"Limitations","p":["The retrieval of the entire structure for very large repositories can be challenging due to the constraints of the ChatGPT context size. To address this limitation and ensure efficient and user-friendly interactions, the feature is designed to initially present only the directories for large repositories. This approach allows ChatGPT to specify which directory or directories it wish to explore further, enabling a more targeted and manageable exploration. This design choice ensures that despite the inherent constraints, users can still gain meaningful insights into the structure of large repositories without overwhelming ChatGPT."]}],[{"l":"Repository Content"},{"l":"Overview","p":["The Repository Content feature is designed to empower ChatGPT with the ability to retrieve and analyze the content of files within a GitHub repository. By first querying the structure of the repository, ChatGPT gains knowledge of the files present and can then selectively request the content of files deemed relevant to answer the user's question."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Comprehensive Analysis: By accessing the actual content of repository files, ChatGPT can provide detailed insights, explanations, and code suggestions.","Optimized File Retrieval: AskTheCode employs multiple strategies to reduce file sizes and ensure efficient content retrieval, especially for large files.","Private Repository Access: this feature supports accessing private repositories if the user is authenticated with their GitHub account.","Paging Support: For extensive files, AskTheCode enforces content paging to ensure that ChatGPT can analyze the file without hallucinations."]},{"l":"Constraints","p":["File Size Limit: The maximum file size supported by AskTheCode is 50,000 characters long. This limit is due to the current restrictions of ChatGPT for the maximum plugin response size.","Large Files: Issues can occur with very large files due to the limits of the ChatGPT context size. It's recommended to be cautious when analyzing large files.","Repository Structure Limit: Currently, the plugin can retrieve the structure of repositories that have less than 100,000 files with a maximum size of 7 MB for their structure. This limitation is derived from the GitHub tree endpoint."]},{"l":"Sample"},{"l":"Basic sample","p":["The sample and guidelines can be found here"]},{"l":"Retrieving Files by Pages","p":["Sometimes you might prompt ChatGPT for something that will require it to query multiple files from the repository, and the total size of these files can be quite large. If the plugin were to simply return all contents to ChatGPT, it would significantly overflow the context of the GPT-4 model used under the hood, and resulted in a poor response quality. To prevent this, the plugin detects when the total size of the requested files is significant and pages them.","Let's assume that we want to query all functions defined in the Langchain Utils directory.","Sample conversation: https://chat.openai.com/share/f349d959-d957-47f7-a7f7-0febe9197602","The total size of all files within this directory is large, which would result in ChatGPT compressing file contents, significantly impacting the response quality. Instead, the plugin paginates results, allowing ChatGPT to analyze the amount of data it can process at once."]}],[{"l":"Search File"},{"l":"Overview","p":["The Search File functionality is a feature designed to enhance interactions with large files within Github repositories. It enables ChatGPT to conduct keyword searches within a single file, focusing on specific classes, functions, or property declarations. This feature is particularly useful for querying large files that cannot be supported as raw content."]},{"l":"Search Hits and Contextual Analysis","p":["Search File returns \"search hits\", meaning that when a user queries for a specific entity within a file, the plugin provides relevant snippets from the file. This capability is crucial for understanding the context or usage of a specific method or entity without fetching the entire file content."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Targeted Searches: Allows users to search for specific classes, functions, or properties within a file.","Large File Handling: Ideal for interacting with large files that are too extensive for the context window of the GPT model.","Customizable Results: Users can specify the number of lines to extract for each search hit.","Pagination of Results: Supports pagination for extensive search results, providing partial results in the first response and allowing for subsequent requests for remaining matches."]},{"l":"Sample","p":["You can find the sample usage of this feature in the Usage > Querying Large Files documentation"]},{"l":"Conclusion","p":["The Search File functionality enhances the capabilities of the plugin, offering a more refined and targeted approach to navigating large files in Github repositories. It addresses the challenges of interacting with large files and provides a solution tailored to user queries, ensuring a more efficient and user-centric experience."]}],[{"l":"Search Code","p":["Only the default branch is supported for this functionality."]},{"l":"Overview","p":["The Search Code functionality is a feature designed to enhance interactions with Github repositories. By leveraging the Github Search, it provides more precise results when users specify particular entities such as a class, method, file etc. Unlike the base version of the plugin, which returns the entire repository structure to ChatGPT, this feature narrows down the results based on user input, ensuring more relevant and accurate responses."]},{"l":"Search Hits and Contextual Analysis","p":["One of the powerful aspects of the Search functionality is its ability to return search hits. This means that when a user queries for a specific entity, such as a method or class, the plugin doesn't just identify its presence but also provides snippets or \"hits\" from the file where the entity is found.","This capability is particularly useful in scenarios where users want to understand the context or usage of a specific method or entity without fetching the entire file content. For instance, if a user asks, \"Is this method only declared or also used somewhere across the file/repository?\", the search hits can provide enough context to answer without needing to analyze the whole file."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Enhanced Precision: By specifying entities like files, classes, or methods, users can get directly relevant results, bypassing unrelated content.","Overcome Base Limitations: The Search feature addresses the Repository Structure Limit constraint of the base functionality, offering a more refined search experience.","Quick Access: Users can swiftly navigate to the exact sections of a repository they're interested in.","Optimized for Large Repositories: Especially useful for extensive repositories where the base functionality might be overwhelmed."]},{"l":"Samples"},{"i":"net-runtime-repository-analysis","l":".NET Runtime Repository Analysis","p":["Full Sample URL: Proposal for Skipping Visibility Checks","In this sample, we use the plugin to analyze the proposal in the .NET runtime repository. This repository is enormously large and greatly exceeds the repository size constraints.","Steps in the sample:","First, we use the Issues feature to analyze the proposal description and comments.","We try to find the details about the attribute mentioned in the proposal.","The continuation of the conversation is omitted, but the user could use the plugin to continue the analysis."]},{"l":"Conclusion","p":["The Search Code functionality enhances the capabilities of the plugin, offering users a more refined and targeted approach to navigating Github repositories. By addressing the repository size limitations of the base functionality and providing a solution tailored to user queries, it ensures a more efficient and user-centric experience."]}],[{"i":"#","p":["The functionality described in this document is currently in beta. Please be aware that there might be some unexpected behaviors.","Currently the feature is supported only by the AskTheCode GPT. The AskTheCode plugin will gain this support soon.","Only the default branch is supported for this functionality."]},{"l":"Search Commits","p":["The Search Commits functionality allows users to use natural language queries to explore and analyze commits in a Github repository. This feature enhances the ability to understand and review changes in the repository over time."]},{"l":"Overview","p":["The Search Commits functionality is a powerful tool for navigating and understanding the commit history within a Github repository. It is designed to cater to users' specific needs by allowing them to search for commits they are interested in, based on various criteria, and then providing detailed insights into those commits."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Natural Language Queries: Interact with commit history using intuitive natural language.","Detailed Commit Analysis: Obtain in-depth information about what each commit entails.","Commit Details: Delve deeper into the commit details using the Commit Details feature."]},{"l":"Sample","p":["Full Sample URL: AskTheCode GPT Sample","In this example, we search for all commits related to the ConversationChain in the Langchain repository. After retrieving the commit search results, we delve deeper into the specific commit we are interested in."]},{"l":"Conclusion","p":["The Search Commits feature provides a streamlined and intuitive approach for developers to explore and analyze commit histories in Github repositories. By enabling targeted searches for specific commits and offering detailed insights into each one, it simplifies the process of tracking and understanding the implications of code changes. This feature enhances the efficiency and depth of commit analysis, making it an essential tool for any developer looking to maintain a clear view of project evolution."]}],[{"i":"#","p":["The functionality described in this document is currently in beta. Please be aware that there might be some unexpected behaviors.","Currently the feature is supported only by the AskTheCode GPT. The AskTheCode plugin will gain this support soon."]},{"l":"Search Repositories"},{"l":"Overview","p":["The Search Repositories feature in the AskTheCode plugin enables users to leverage natural language queries to search for GitHub repositories. This feature is particularly useful for developers looking for repositories in specific programming languages or meeting certain criteria."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Ease of Use: Searching for repositories through natural language queries simplifies the discovery process.","Language-Specific Searches: Focus on repositories in a specific programming language, making it easier to find relevant projects or examples.","Time-Saving: Quickly find repositories without manually browsing through GitHub."]},{"l":"Sample","p":["Full Sample URL: AskTheCode GPT Sample","In this example, we search for javascript repositories that implement poker game."]},{"l":"Conclusion","p":["The Search Repositories functionality enhances the AskTheCode plugin by providing a user-friendly and efficient way to search for GitHub repositories. It caters to both broad and specific needs, making it an invaluable tool for developers exploring GitHub."]}],[{"i":"#","p":["The functionality described in this document is currently in beta. Please be aware that there might be some unexpected behaviors.","Currently the feature is supported only by the AskTheCode GPT. The AskTheCode plugin will gain this support soon."]},{"l":"Search Issues"},{"l":"Overview","p":["The Search Issues functionality in the AskTheCode plugin empowers users to query Github repository issues using natural language. This feature enhances the user's ability to find relevant issues quickly and efficiently."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Natural Language Queries: Enables users to search for issues using conversational language, making the process intuitive and user-friendly.","Focused Results: Retrieves issues that are closely related to the user's query, saving time in sifting through unrelated issues.","Issue Details: Delve deeper into the issue thread using the Github Issues feature."]},{"l":"Sample","p":["Full Sample URL: AskTheCode GPT Sample","In this example, the user queries for all issues related to the ConversationChain in the Langchain repository. After retrieving the issues search results, we delve deeper into the specific issue we are interested in."]},{"l":"Conclusion","p":["The Search Issues feature of AskTheCode significantly streamlines the process of querying Github issues. It leverages natural language processing to provide a more intuitive and efficient user experience, making it easier to engage with Github discussions directly from ChatGPT."]}],[{"i":"#","p":["Currently the feature is supported only by the AskTheCode GPT."]},{"l":"List Branches"},{"l":"Overview","p":["The List Branches feature enables users to view all branches within a specific GitHub repository directly from the AskTheCode GPT. This functionality provides an overview of the repository's branch structure, making it easier to navigate and manage different versions of the project."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Branch Overview: Quickly get an overview of all branches in a repository, helping users to navigate and understand the project's structure.","Branch Selection for Work Continuation: Enables users to pick up and continue working on a specific branch directly from the chat UI.","Branch Naming Strategy Support: Depending on the branch naming strategy, this feature can help ChatGPT to automatically pick the correct branch for any user interactions."]},{"l":"How to Use","p":["Provide the Repository URL: Start by providing the GitHub repository URL to the AskTheCode plugin.","Request Branch List: Ask for a list of all branches in the repository using a simple command like \"Please list all branches in [repository URL].\""]},{"l":"Sample"},{"l":"Conclusion","p":["The \"List Repository Branches\" feature is a vital tool for efficient GitHub repository management, offering a straightforward method to view and select branches. It enhances user interaction with the project by facilitating branch selection and supporting strategic branch naming for optimized ChatGPT integration."]}],[{"i":"#","p":["Currently the feature is supported only by the AskTheCode GPT.","This feature is only avalable when the GitHub OAuth Authentication is used."]},{"l":"Create Branch"},{"l":"Overview","p":["The Create Branch feature allows users to create a new branch within a GitHub repository directly from the AskTheCode GPT. This feature streamlines the process of branching, enabling users to easily manage different development paths or features within the project."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Streamlines Branch Creation: Simplifies the process of creating a new branch, making it accessible directly from the chat interface.","Supports Multiple Development Paths: Facilitates the management of different features or development directions by allowing easy branch creation.","Facilitates Safe File Management: Aligns well with the file content management features, highly recommended to let AskTheCode manage files in a new branch to prevent corrupting working code."]},{"l":"How to Use","p":["Provide the Repository URL: Begin by providing the GitHub repository URL to the AskTheCode plugin.","Specify the New Branch Name: Indicate the desired name for the new branch. It's important to follow any naming conventions your project adheres to.","Identify the Source Branch (Optional): If you want the new branch to be created from a specific branch other than the default, specify the source branch."]},{"l":"Sample"},{"l":"Conclusion","p":["The Create Branch feature is primarily designed to enhance the file editing experience by providing a safe environment for managing changes. Creating a new branch is highly recommended when working on modifications, ensuring that the main project's code remains intact and operational."]}],[{"l":"Delete Branch","p":["Currently, the feature is supported only by the AskTheCode GPT.","This feature is only available when the GitHub OAuth Authentication is used."]},{"l":"Overview","p":["The Delete Branch feature allows users to remove an existing branch from a GitHub repository directly through AskTheCode GPT. This feature facilitates efficient branch management by enabling users to declutter the repository by removing obsolete or merged branches."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Simplifies Branch Management: Allows for the easy removal of branches that are no longer needed, keeping the repository clean and manageable.","Prevents Clutter: Helps in avoiding the accumulation of stale branches, making it easier to navigate and focus on active development branches.","Completes Branch Management Features: Along with creating and listing branches, deleting a branch completes the suite of branch management capabilities, offering full control over the repository's branches directly from the chat interface."]},{"l":"How to Use","p":["Provide the Repository URL: Start by giving the GitHub repository URL to the AskTheCode plugin.","Specify the Branch to Delete: Clearly state the name of the branch you wish to delete. Ensure that the branch is not protected or currently in use.","Confirm Deletion (Optional): For safety, you may be asked to confirm the deletion request. This prevents accidental removal of important branches."]},{"l":"Sample"},{"l":"Conclusion","p":["The Delete Branch feature is crucial for maintaining a clean and efficient repository. It complements the file and branch management features by allowing users to easily remove branches, ensuring that the repository remains organized and focused on current development efforts."]}],[{"i":"#","p":["The functionality described in this document is currently in beta. Please be aware that there might be some unexpected behaviors.","Currently the feature is supported only by the AskTheCode GPT.","This feature is only avalable when the GitHub OAuth Authentication is used."]},{"l":"File Creation"},{"l":"Overview","p":["The File Creation feature in AskTheCode enables users to add new files to a GitHub repository directly through the chat interface. This functionality simplifies the process of contributing new content to a project as a result of your interactions with the AskTheCode GPT, allowing for quick and seamless integration of new resources, documentation, or code."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Facilitates Persistent GPT Interactions: This enhancement enables users to directly save the outcomes of their interactions with AskTheCode GPT into the repository. Whether it's code snippets, configuration files, or documentation generated during a chat, this feature seamlessly integrates GPT's insights into your project's development workflow.","Enhances Collaboration Through GPT Insights: By allowing the storage of GPT interaction results, team members can now contribute more effectively. This feature not only preserves the context of discussions but also enriches the project repository with valuable insights, making collaboration more dynamic and informed."]},{"l":"How to Use","p":["Select the Repository and Branch: Initiate by choosing the GitHub repository URL where the new file will be created. Consider creating a new branch for these changes to maintain the stability of the project's mainline.","Provide File Details: Specify the path and name for the new file, including the directory structure if it should be nested within specific folders.","Incorporate GPT Interaction Results: Ask AskTheCode GPT to generate a required content and store it to the file. This could be code, documentation, or any other project-relevant content.","Finalize File Creation: Optionally you can explicitly specify the commit message to eb used. If not, AskTheCode GPT will generate appropriate commit message on its own."]},{"l":"Example"},{"l":"Conclusion","p":["The File Creation feature enhances the GitHub experience by enabling users to easily add new files to their repositories directly from the chat interface with AskTheCode, streamlining project development and collaboration."]}],[{"i":"#","p":["The functionality described in this document is currently in beta. Please be aware that there might be some unexpected behaviors.","Currently the feature is supported only by the AskTheCode GPT.","This feature is only avalable when the GitHub OAuth Authentication is used."]},{"l":"File Update"},{"l":"Overview","p":["The File Update feature in AskTheCode enables users to modify existing files in a GitHub repository directly through the chat interface. This functionality allows for the efficient management and updating of project contents, ensuring that your repository remains up-to-date with the latest changes and improvements."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Streamlines Content Management: Facilitates the quick and efficient updating of files, enabling project repositories to stay current with the latest developments and corrections.","Enhances Collaborative Workflows: Allows team members to easily update files based on collaborative decisions or to incorporate new insights, improving the overall project quality.","Supports Incremental Improvements: Enables the iterative improvement of project files, allowing for the gradual enhancement of content, code, and documentation."]},{"l":"How to Use","p":["Select the Repository and Branch: Begin by specifying the GitHub repository URL and the branch where the file update will occur. Ensure you're working on the appropriate branch for your changes.","Identify the File to Update: Provide the path and name of the file you wish to update. Precision is key to ensuring the correct file is modified.","Specify Changes: Detail the modifications to be made to the file. This can include content addition, deletion, or modification. AskTheCode GPT can assist in generating the updated content as required.","Finalize File Update: Confirm the changes and optionally specify a commit message. If not provided, AskTheCode GPT will generate a suitable commit message based on the updates made."]},{"l":"Example"},{"l":"Conclusion","p":["The File Update feature enhances the GitHub experience by enabling straightforward modifications to files within repositories, facilitating seamless project updates and collaboration."]}],[{"i":"#","p":["The functionality described in this document is currently in beta. Please be aware that there might be some unexpected behaviors.","Currently the feature is supported only by the AskTheCode GPT.","This feature is only avalable when the GitHub OAuth Authentication is used."]},{"l":"File Deletion"},{"l":"Overview","p":["The File Deletion feature in AskTheCode allows users to remove files from a GitHub repository directly through the chat interface. This functionality enables a more dynamic and interactive experience, allowing for the seamless management of repository contents."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Streamlines Repository Management: Facilitates the quick and easy removal of unnecessary or outdated files from the repository, keeping the project clean and organized.","Enhances Collaborative Workflows: By allowing the deletion of files through chat, users can efficiently manage project assets and maintain a streamlined development process.","Supports Dynamic Project Evolution: As projects evolve, the ability to remove files becomes crucial in adapting to new requirements or changes in project direction."]},{"l":"How to Use","p":["Select the Repository and Branch: Begin by specifying the GitHub repository URL where the file will be deleted. Ensure you're working on the correct branch to avoid unintended deletions.","Identify the File to Delete: Provide the path and name of the file you wish to remove. Accuracy is crucial to prevent the deletion of the wrong file.","Confirm File Deletion: Before proceeding, AskTheCode GPT will confirm the file deletion request to ensure it is intentional and correct. This step is crucial for avoiding accidental loss of important files.","Deletion Process: Upon confirmation, AskTheCode GPT will proceed to delete the specified file from the repository and provide feedback on the successful removal."]},{"l":"Example"},{"l":"Conclusion","p":["The File Deletion feature is designed to complement the file management capabilities within GitHub repositories, offering a direct and efficient method to remove files. By integrating this feature with the chat interface, AskTheCode enhances the user experience, providing a seamless workflow for managing project contents."]}],[{"l":"Github Issues"},{"l":"Overview","p":["The Github Issues functionality is a powerful tool that not only allows users to delve deeper into the conversations and discussions surrounding a particular Github issue but also empowers them to post comments directly. By providing a link to the desired Github issue, users can ask ChatGPT questions related to the conversation under this issue or even request to post a comment. Dive into the heart of Github discussions, interact seamlessly, and make your voice heard without leaving the ChatGPT environment."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Deep Dive into Discussions: Understand the context and nuances of discussions without having to manually sift through long conversation threads.","Quick Insights: Get quick answers to specific questions about an issue's conversation, saving time and effort.","Enhanced Collaboration: By understanding the core of discussions, developers can make more informed decisions and contribute more effectively.","Direct Interaction: With the comments posting capability, users can actively participate in ongoing discussions, provide feedback, or ask further questions directly from ChatGPT. This seamless integration ensures that users can make their voice heard without the need to switch between platforms.","Controlled Engagement: ChatGPT ensures that no comment is posted without the user's explicit approval, providing a safe and controlled environment for interaction."]},{"l":"Issue Analysis","p":["The Issue Analysis feature allows users to gain insights into the discussions surrounding a Github issue. By providing ChatGPT with the link to the desired Github issue, the tool will analyze the conversation and provide relevant answers or insights. For long issues, not all comments may be retrieved at once due to limitations. ChatGPT will notify you in such cases and ask if you want to analyze the next part of the comments. For shorter issues, the entire conversation can be retrieved in a single request. This feature is particularly useful for understanding the context and nuances of discussions without having to manually sift through long conversation threads."]},{"l":"Sample","p":["Full Sample URL: ChatGPT Sample","In this sample, the user is keen on understanding how to deploy the Langchain service as an AWS Lambda. They stumble upon a relevant Github issue: Langchain Issue #1364. The discussion on this issue is extensive, making it challenging for the user to pinpoint the solution swiftly.","With the help of ChatGPT's Issue Analysis feature, the conversation is analyzed, and the solution is identified. ChatGPT confirms that the proposed solution was also validated by other users in the discussion. This solution directs the user to a repository containing the necessary template.","ChatGPT further delves into this repository, providing the user with a comprehensive overview and guiding them through the deployment process."]},{"l":"Comments Posting","p":["This feature is only avalable when the GitHub OAuth Authentication is used.","The Comments Posting feature allows users to interact with Github issues directly from ChatGPT. Users can request ChatGPT to compose a comment to post to the issue, either based on a previous feature analysis or from scratch. Rest assured, ChatGPT will never post a comment without confirming it with you first and asking for your approval. This feature enhances collaboration by allowing users to make their voice heard without leaving the ChatGPT environment."]},{"i":"sample-1","l":"Sample","p":["Full Sample URL: ChatGPT Sample","In this sample, the user requests ChatGPT to analyze an issue. For demonstration purposes, a test issue inside a private repository is used to avoid unintended interactions with real issues. ChatGPT proposes an initial version of the comment based on the analysis. The user, after reviewing the comment, can provide feedback and request changes to better align with their intent.","ChatGPT then refines the comment based on the user's feedback. Once the user is satisfied and approves the comment, ChatGPT proceeds to post the comment to the specified Github issue, ensuring a seamless and interactive experience."]},{"l":"Conclusion","p":["The Github Issues functionality is a game-changer for both repository maintainers and end-users. Maintainers can now swiftly respond to created issues via ChatGPT, ensuring a more dynamic and interactive community. On the other hand,"]}],[{"l":"Commit Details"},{"l":"Overview","p":["The Commit Details feature allows users to delve deeper into the changes in the particular Github commit. By providing a link to the desired Github commit, users can ask ChatGPT questions related to the changes in this commit or even request to load the full file content before or after the commit for a more detailed analysis. Dive into the heart of Github commits, understand the changes, and analyze them without leaving the ChatGPT environment."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Detailed Analysis: Understand the changes in a commit without having to manually sift through the code.","Quick Insights: Get quick answers to specific questions about a commit's changes, saving time and effort.","Enhanced Understanding: By understanding the changes in a commit, developers can make more informed decisions and contribute more effectively.","Iterative Analysis: For large commits, paging is implemented, allowing ChatGPT to analyze changes iteratively.","Full File Content Loading: Users can request ChatGPT to load the full file content before or after the commit for a more in-depth analysis."]},{"l":"Sample"},{"l":"Small commit analysis","p":["Full Sample URL: ChatGPT Sample","In this sample, we are analyzing a commit from the .NET Runtime github repository:.NET Runtime Commit","We are prompting ChatGPT with the next prompt:"]},{"l":"Larger commit analysis","p":["Some commits are large enough that they cannot be analyzed in one go. To maintain response quality, the plugin pages the commit changes in the case of large commits.","Full Sample URL: ChatGPT Sample","In this sample, we'll analyze a commit from the Semantic Kernel GitHub repository: Semantic Kernel Commit","In this case, the commit contains changes in 13 files. These changes are quite extensive. So, when prompted with similar prompts as above, it analyzes only the first 5 files with the first request and then analyzes the remaining files with the second request."]}],[{"i":"#","p":["The functionality described in this document is currently in beta. Please be aware that there might be some unexpected behaviors.","Currently the feature is supported only by the AskTheCode GPT. The AskTheCode plugin will gain this support soon."]},{"l":"File Commit History"},{"l":"Overview","p":["The File Commit History feature allows users to explore the commit history of a specific file within a Github repository. By providing the link to a Github repository and specifying a file path, users can delve into the evolution of the file, examining each commit that has modified it."]},{"i":"why-its-useful","l":"Why It's Useful","p":["Historical Insight: Gain a comprehensive understanding of how a file has evolved over time, including changes made in each commit.","Blame Analysis: Determine who made specific changes to the file and when, facilitating accountability and collaboration.","Contextual Understanding: Understand the reasons behind changes by linking them to specific commits and their messages.","Iterative Exploration: For files with extensive commit histories, users can explore the history iteratively, focusing on specific periods or changes of interest.","Commit Details: Delve deeper into the commit details using the Commit Details feature."]},{"l":"Sample"},{"l":"Analyzing File History","p":["Full Sample URL: AskTheCode GPT Sample","In this example, we analyze the commit history of the UnsafeAccessorAttribute.cs file in the .NET Runtime repository. After retrieving the commit history, we delve deeper into the specific commit we are interested in."]},{"l":"Conclusion","p":["The File Commit History feature enhances the Github repositories analysis, offering users a detailed and insightful look into the history of individual files. This feature is particularly useful for developers, project managers, and anyone interested in understanding the evolution of a project's codebase."]}],[{"l":"Basic Usage","p":["The screenshots provided in this guide are based on an older version of the AskTheCode plugin. The actual response from the plugin might differ (and hopefully be better) in the latest versions.","The AskTheCode plugin is designed to assist developers in analyzing GitHub repositories. By integrating with ChatGPT, users can ask questions directly related to the content and structure of a given repository. This documentation will guide you through the basic usage of the plugin."]},{"l":"Prerequisites","p":["A GitHub repository URL you wish to analyze.","AskTheCode plugin installed"]},{"l":"Steps for Basic Usage","p":["Provide the Repository Link: Start by providing the GitHub repository URL to the AskTheCode plugin.","Ask Questions: With the repository URL provided, you can now ask specific questions related to the repository. For instance, if you want to know about the purpose or details of a particular project, simply ask.","Interact and Analyze: Based on the responses from the plugin, you can continue to interact with ChatGPT to get deeper insights, explanations, or even code suggestions related to the repository."]},{"i":"sample-langchain","l":"Sample: LangChain","p":["If you're curious about a particular GitHub repository and want to get general information or insights, the AskTheCode plugin can be invaluable. Let's take the \"LangChain\" repository as an example.","Input the following prompt:","In a barebone ChatGPT, without any plugins, it might not know anything about \"LangChain\".","However, with the AskTheCode plugin, ChatGPT can directly fetch and analyze the information from the provided GitHub repository and answer the question."]},{"l":"Tips","p":["Ensure that the repository URL is correct and accessible.","Be specific in your questions to get more accurate and relevant answers.","Familiarize yourself with the repository's structure to ask more targeted questions."]}],[{"l":"Using Custom Branches with AskTheCode Plugin","p":["The AskTheCode plugin is not limited to querying repositories using just the default branch. It offers flexibility by allowing users to specify a particular branch or even use a commit SHA to view the repository files at a specific point in history."]},{"l":"Custom Branch or Commit SHA","p":["To query a specific branch, append the branch name to the repository URL after /tree/, the URL would look like https://github.com/owner/repo/tree/branch-name.","To query a specific commit, append the commit SHA to the repository URL after /tree/, the URL would look like https://github.com/owner/repo/tree/commit-sha."]},{"l":"Sample Queries","p":["Each of the following samples demonstrates how to structure your prompt for different types of queries."]},{"l":"Troubleshooting","p":["If you encounter issues accessing specific branches or commits, consider the following steps to diagnose and resolve the problem:","Check the URL Format: Ensure that the URL format is correct when specifying a branch or commit. For branches, the URL should look like https://github.com/owner/repo/tree/branch-name. For commits, it should be https://github.com/owner/repo/tree/commit-sha.","Custom Instructions for ChatGPT: The way ChatGPT interacts with the AskTheCode plugin can be influenced by previous conversations and prompts. If you have set custom instructions for how you want ChatGPT to respond to your inquiries, it might interfere with the plugin's functionality. Consider removing or modifying these instructions and try accessing the branch or commit again.","Test in a New Chat Window: Sometimes, starting a fresh conversation can help. Try accessing the branch or commit in a new chat window using a simple prompt.","Feedback and Reporting: If you continue to face issues, provide feedback or report the issue for further assistance. Detailed information, including screenshots or specific error messages, can be helpful in diagnosing the problem."]}],[{"l":"Iterative Prompting","p":["The screenshots provided in this guide are based on an older version of the AskTheCode plugin. The actual response from the plugin might differ (and hopefully be better) in the latest versions.","In this guide, we'll showcase the power of specifying steps for the AskTheCode plugin. By providing a structured prompt, you can guide the plugin to analyze code in a more focused manner, ensuring you get the insights you need.","Full demo can be found here: Endpoint Handling Flow Analysis"]},{"l":"Prerequisites","p":["Access to the eShopOnWeb repository: https://github.com/dotnet-architecture/eShopOnWeb","AskTheCode plugin installed"]},{"i":"step-1-crafting-the-prompt-for-askthecode-plugin","l":"Step 1: Crafting the Prompt for AskTheCode Plugin","p":["The first step is to provide a clear and structured prompt to the AskTheCode plugin. This prompt acts as a set of instructions, guiding the plugin on what to analyze and how.","Input the following prompt:"]},{"i":"step-2-plugins-search-for-the-route-handler","l":"Step 2: Plugin's Search for the Route Handler","p":["Upon receiving the prompt, AskTheCode will begin its search for the file handling the 'GET api/catalog-items' route."]},{"i":"step-3-plugin-identifying-dependencies","l":"Step 3: Plugin Identifying Dependencies","p":["Now we need to ask the plugin to proceed with the depndencies analysis.","Input the following prompt:"]},{"i":"step-4-6-re-iterating-with-dependency-analysis","l":"Step 4-6: Re-iterating with Dependency Analysis","p":["Now we can ask the plugin to proceed with the dependency analysis over and over until we are satisfied with the results. To keep the knowledge gained in context and prevent losing it, we ask ChatGPT to summarize all the knowledge gained first and only then proceed with further research.","Input the following prompt:","This process can be repeated as many times as needed (3 times in this demo)."]},{"i":"step-5-reviewing-the-plugins-response","l":"Step 5: Reviewing the Plugin's Response","p":["Once the analysis is complete, AskTheCode will provide a comprehensive description of the main components, their interactions, and any other relevant details as instructed in the prompt."]},{"i":"visualizing-the-analysis-mermaid-flowchart","l":"Visualizing the Analysis: Mermaid Flowchart","p":["To further enhance our understanding of the 'GET api/catalog-items' endpoint and its dependencies, we can visualize the results using a Mermaid flowchart. This provides a graphical representation of the interactions and flow of the endpoint, making it easier to grasp the overall structure and logic.","By prompting ChatGPT with the following:","We can obtain a Mermaid diagram similar to the following:"]},{"l":"Conclusion","p":["By providing a clear and structured prompt to the AskTheCode plugin, you can harness its power to get precise insights into specific parts of a codebase. This approach can be replicated for other endpoints or repositories, demonstrating the flexibility and capability of the plugin."]}],[{"l":"Querying Large Files","p":["The screenshots provided in this guide are based on an older version of the AskTheCode plugin. The actual response from the plugin might differ (and hopefully be better) in the latest versions.","In this guide, we'll investigate how the File Search feature can assist in analyzing large files. We'll conduct the analysis on the Qdrant vector store from the Langchain repository. This file is 91.5K characters long, so it won't fit into the GPT-4 context for analysis, which could result in model hallucinations.","Full demo can be found here: Qdrant Class and Function"]},{"l":"Prerequisites","p":["Access to the Qdrant vectorstore in the Langchain repository: https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/vectorstores/qdrant.py","AskTheCode plugin installed"]},{"i":"step-1-retrieving-all-defined-classes-and-functions","l":"Step 1: Retrieving all defined classes and functions","p":["The first step is to retrieve all defined classes and functions of the Qdrant vectorstore.","Input the following prompt:"]},{"i":"step-2-plugin-searching-in-the-file","l":"Step 2: Plugin Searching In The File","p":["Upon receiving the prompt, AskTheCode will first iterate through the repository and search for the Qdrant vector store. Once found, it will perform the search for the class and function definitions within the file:","It's worth noting how ChatGPT understood which keywords it should use when searching for classes and functions in the Python code:"]},{"i":"step-3-retrieving-body-of-the-specific-function","l":"Step 3: Retrieving Body Of The Specific Function","p":["Now we want to ask the plugin to give us the body of the _asearch_with_score_by_vector function, that we can use for our further analysis.","Input the following prompt:","In this prompt, we are explicitly specifying how many lines of code we want to extract to ensure that the whole function body will be contained in the plugin response."]},{"i":"step-4-plugin-retrieves-the-function","l":"Step 4: Plugin Retrieves The Function","p":["Upon receiving the prompt, AskTheCode will search the Qdrant vectorstore file once again, now for a specific function:"]},{"l":"Conclusion","p":["In this guide, we explored the powerful capabilities of the File Search feature in the AskTheCode plugin, particularly in handling large files. Our case study involved the Qdrant vector store from the Langchain repository, a file too large for traditional analysis within the GPT-4 context."]}],[{"l":"AskTheCode Samples","p":["Welcome to the Samples page of AskTheCode! Here, you'll find various examples showcasing the interaction of the ChatGPT plugin with different GitHub repositories. These samples will help you understand how AskTheCode can assist you in answering questions related to your repositories.","As we continue to enhance AskTheCode, more samples will be added to this page."]},{"i":"refit-librarys-http-proxy-client-generation","l":"Refit Library's HTTP Proxy Client Generation","p":["In this sample, we dive into understanding how the Refit library generates the HTTP proxy client internally.","View Sample"]},{"l":"Langchain and ChatGPT Plugins Integration","p":["Lets assume we are targeting to find out about integrating ChatGPT plugin into the Langchain pipeline. For that we can provide the link to the docs directory in the Langchain Github repository and ask ChatGPT to look for the details of integration. Since the repository of the Langchain is quite huge, the prompt should be pretty specific, something like:","This will give us a sample of how to integrate Langchain with the GPT plugin:"]},{"l":"Documentation Generation","p":["This conversation demonstrates the use of AskTheCode's file creation and update features within a GitHub repository. It showcases a step-by-step process for analyzing a repository's structure, creating new directories and files, and updating existing files with specific annotations and documentation content. The interaction shows how users can efficiently manage GitHub files, including writing and applying documentation updates directly through conversational commands.","View Sample"]}],[{"l":"AskTheCode Legal Info"},{"l":"Disclaimer","p":["THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.","IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."]}]]